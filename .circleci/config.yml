# Copyright 2023 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

setup: true

orbs:
  path-filtering: circleci/path-filtering@1.2.0
  continuation: circleci/continuation@1.0.0

parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""
  enable_regtest:
    type: boolean
    default: false

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  run_ut:
    when:
      and:
        - not: << pipeline.parameters.enable_regtest >>
        - not: << pipeline.parameters.GHA_Action >>
        - not: << pipeline.parameters.GHA_Meta >>
        - not: << pipeline.parameters.GHA_Event >>
    jobs:
      - path-filtering/filter:
          base-revision: main
          tag: '3.10' # specific cimg/python
          config-path: .circleci/unittest-config.yml
          mapping: |
            api/.* run_go_ut true
            cmd/.* run_go_ut true
            pkg/.* run_go_ut true
            contrib/.* run_go_ut true
            .circleci/unittest-config.yml run_go_ut true
            bazel/.* run_cpp_ut true
            engine/.* run_cpp_ut true
            .bazelrc run_cpp_ut true
            .bazeliskrc run_cpp_ut true
            MODULE.bazel run_cpp_ut true
            .circleci/unittest-config.yml run_cpp_ut true
            api/.* CIRCLE_PULL_REQUEST "$CIRCLE_PULL_REQUEST"
            api/.* CIRCLE_SHA1 "$CIRCLE_SHA1"
            api/.* CIRCLE_BRANCH "$CIRCLE_BRANCH"
            cmd/.* CIRCLE_PULL_REQUEST "$CIRCLE_PULL_REQUEST"
            cmd/.* CIRCLE_SHA1 "$CIRCLE_SHA1"
            cmd/.* CIRCLE_BRANCH "$CIRCLE_BRANCH"
            pkg/.* CIRCLE_PULL_REQUEST "$CIRCLE_PULL_REQUEST"
            pkg/.* CIRCLE_SHA1 "$CIRCLE_SHA1"
            pkg/.* CIRCLE_BRANCH "$CIRCLE_BRANCH"
            contrib/.* CIRCLE_PULL_REQUEST "$CIRCLE_PULL_REQUEST"
            contrib/.* CIRCLE_SHA1 "$CIRCLE_SHA1"
            contrib/.* CIRCLE_BRANCH "$CIRCLE_BRANCH"
            .circleci/unittest-config.yml CIRCLE_PULL_REQUEST "$CIRCLE_PULL_REQUEST"
            .circleci/unittest-config.yml CIRCLE_SHA1 "$CIRCLE_SHA1"
            .circleci/unittest-config.yml CIRCLE_BRANCH "$CIRCLE_BRANCH"
            bazel/.* CIRCLE_PULL_REQUEST "$CIRCLE_PULL_REQUEST"
            bazel/.* CIRCLE_SHA1 "$CIRCLE_SHA1"
            bazel/.* CIRCLE_BRANCH "$CIRCLE_BRANCH"
            engine/.* CIRCLE_PULL_REQUEST "$CIRCLE_PULL_REQUEST"
            engine/.* CIRCLE_SHA1 "$CIRCLE_SHA1"
            engine/.* CIRCLE_BRANCH "$CIRCLE_BRANCH"
            .bazelrc CIRCLE_PULL_REQUEST "$CIRCLE_PULL_REQUEST"
            .bazelrc CIRCLE_SHA1 "$CIRCLE_SHA1"
            .bazelrc CIRCLE_BRANCH "$CIRCLE_BRANCH"
            .bazeliskrc CIRCLE_PULL_REQUEST "$CIRCLE_PULL_REQUEST"
            .bazeliskrc CIRCLE_SHA1 "$CIRCLE_SHA1"
            .bazeliskrc CIRCLE_BRANCH "$CIRCLE_BRANCH"
            MODULE.bazel CIRCLE_PULL_REQUEST "$CIRCLE_PULL_REQUEST"
            MODULE.bazel CIRCLE_SHA1 "$CIRCLE_SHA1"
            MODULE.bazel CIRCLE_BRANCH "$CIRCLE_BRANCH"
  run_regtest:
    when: << pipeline.parameters.enable_regtest >>
    jobs:
      - path-filtering/filter:
          base-revision: main
          tag: '3.10'
          config-path: .circleci/regtest-config.yml
          mapping: |
            api/.* run_regtest true
            bazel/.* run_regtest true
            cmd/.* run_regtest true
            engine/.* run_regtest true
            pkg/.* run_regtest true
            .bazelrc run_regtest true
            .circleci/regtest-config.yml run_regtest true
  publish-workflow:
    when:
      equal: [ "release", << pipeline.parameters.GHA_Event >> ]
    jobs:
      - continuation/continue:
          configuration_path: .circleci/release-config.yml
          # This is mandatory to trigger a pipeline when pushing a tag
          filters:
            tags:
              only: /.*(?<!dev\d{8})$/